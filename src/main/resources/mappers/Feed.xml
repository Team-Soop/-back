<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.team_soop.soop.repository.FeedMapper">

    <resultMap id="FeedResultMap" type="com.team_soop.soop.entity.FeedList" >
        <id property="feedId" column="feed_id" />
        <result property="userId" column="user_id" />
        <result property="profileImgUrl" column="profile_img_url" />
        <result property="username" column="username" />
        <result property="feedContent" column="feed_content" />
        <result property="feedLikeCount" column="like_count" />
        <collection property="feedImgUrl" javaType="List" resultMap="FeedImgUrlResultMap"/>
    </resultMap>

    <resultMap id="FeedImgUrlResultMap" type="com.team_soop.soop.entity.FeedImgUrl" >
        <id property="feedImgUrlId" column="feed_img_url_id" />
        <result property="feedImgUrl" column="feed_img_url" />
    </resultMap>


    <resultMap id="FeedLikeResultMap" type="com.team_soop.soop.entity.FeedLike" >
        <id property="feedLikeId" column="feed_like_id" />
        <result property="feedId" column="feed_id" />
        <result property="userId" column="user_id" />
        <result property="createDate" column="create_date" />
    </resultMap>

    <resultMap id="FeedCommentResultMap" type="com.team_soop.soop.entity.FeedComment">
        <id property="feedCommentId" column="feed_comment_id"/>
        <result property="feedId" column="feed_id"/>
        <result property="feedCommentUserId" column="user_id"/>
        <result property="feedCommentContent" column="feed_comment_content"/>
        <result property="feedCommentNickName" column="nickname"/>
        <result property="feedCommentUserProfileImgUrl" column="profile_img_url"/>
        <result property="createDate" column="create_date"/>
        <result property="updateDate" column="update_date"/>
    </resultMap>

    <delete id="deleteComment" parameterType="integer">
        delete
        from
            feed_comment_tb
        where
            feed_comment_id = #{commentId}
        and user_id = #{userId}
    </delete>

    <update id="modifyComment" parameterType="com.team_soop.soop.entity.FeedComment">
        update
            feed_comment_tb
        set
            feed_comment_content = #{feedCommentContent},
            update_date = now()
        where
            feed_comment_id = #{feedCommentId}
        and user_id = #{feedCommentUserId}
    </update>

    <insert
            id="saveFeed"
            parameterType="com.team_soop.soop.entity.Feed"
            keyProperty="feedId"
            useGeneratedKeys="true"
    >
        insert into feed_tb
        values (
            0,
            1,
            #{userId},
            #{feedContent},
            now(),
            now()
        )
    </insert>

    <insert id="saveFeedImgUrl">
        insert into feed_img_url_tb
        values
            <foreach collection="feedImgUrls" item="feedImgUrl" separator=",">
                ( 0, #{feedId}, #{feedImgUrl}, now(), now() )
            </foreach>
    </insert>

    <insert id="saveFeedComment">
        insert into feed_comment_tb
        values
        (0, #{feedId}, #{feedCommentUserId}, #{feedCommentContent}, now(), now())
    </insert>

    <select id="searchFeeds" resultMap="FeedResultMap">
        select distinct
            ft.feed_id,
            ft.user_id,
            ut.profile_img_url,
            ut.username,
            ft.feed_content,
            fiut.feed_img_url,
            (select count(*) from feed_like_tb where feed_id = ft.feed_id) as like_count
        from
            feed_tb ft
            left outer join feed_img_url_tb fiut on (fiut.feed_id = ft.feed_id)
            left outer join user_tb ut on (ut.user_id = ft.user_id)
            left outer join feed_like_tb flt on (flt.feed_id = ft.feed_id)
        ;
    </select>

    <insert id="saveFeedLike">
        insert into feed_like_tb
        values
            (0, #{feedId}, #{userId}, now())
    </insert>

    <delete id="deleteFeedLike">
        delete
        from
            feed_like_tb
        where
            feed_id = #{feedId} and user_id = #{userId}
    </delete>

    <select id="getLikeStatus" resultType="com.team_soop.soop.entity.LikeStatus">
        select
            count(*) as likeStatus,
            (select
                count(*) as total_count
            from
                feed_like_tb
            where
                feed_id = #{feedId}
            ) as totalCount
        from
            feed_like_tb
        where
            user_id = #{userId}
        and feed_id = #{feedId}
    </select>

    <select
        id="searchFeedComment"
        resultMap="FeedCommentResultMap"
    >
        select
            fct.feed_comment_id,
            fct.feed_id,
            fct.user_id,
            fct.feed_comment_content,

            ut.nickname,
            ut.profile_img_url,

            fct.create_date,
            fct.update_date
        from
            feed_comment_tb fct
            left outer join user_tb ut on ( ut.user_id = fct.user_id )
        where
            fct.feed_id = #{feedId};
    </select>
</mapper>