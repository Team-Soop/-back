<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">



<mapper namespace="com.team_soop.soop.repository.LunchMapper">

    <resultMap id="LunchCategoryMap" type="com.team_soop.soop.entity.LunchCategory">
        <result property="lunchCategoryName" column="lunch_category_name"/>
    </resultMap>

    <resultMap id="LunchLikeMap" type="com.team_soop.soop.entity.LunchLikeUserId">
        <result property="lunchLikeUserId" column="lunch_like_user_id"/>
    </resultMap>

    <resultMap id="LunchImgUrlMap" type="com.team_soop.soop.entity.LunchImgUrl">
        <result property="lunchImgUrl" column="lunch_img_url"/>
    </resultMap>

    <resultMap id="lunchResultMap" type="com.team_soop.soop.entity.LunchList">
        <id property="lunchId" column="lunch_id"/>
        <result property="userId" column="user_id"/>
        <result property="lunchTitle" column="lunch_title"/>
        <result property="lunchContent" column="lunch_content"/>
        <result property="lunchPlaceName" column="lunch_place_name"/>
        <result property="lunchPlaceX" column="lunch_place_x"/>
        <result property="lunchPlaceY" column="lunch_place_y"/>
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
        <result property="nickName" column="nickname"/>
        <result property="profileImgUrl" column="profile_img_url"/>
        <collection property="lunchImgUrl"  javaType="list" resultMap="LunchImgUrlMap" />
        <collection property="lunchLikeUserId" javaType="list" resultMap="LunchLikeMap"/>
        <collection property="lunchCategoryName" javaType="list" resultMap="LunchCategoryMap"/>
    </resultMap>

    <insert
            id="saveLunch"
            parameterType="com.team_soop.soop.entity.Lunch"
            keyProperty="lunchId"
            useGeneratedKeys="true"
    >
        insert into lunch_tb
        values(0, 3, #{userId}, #{lunchTitle}, #{lunchContent}, #{lunchPlaceName}, #{lunchPlaceX}, #{lunchPlaceY}, now(), now())
    </insert>

    <insert id="saveLunchImgUrl">
        insert into lunch_img_url_tb
        values
        <foreach collection="lunchImgUrls" item="lunchImgUrl" separator=",">
            ( 0, #{lunchId}, #{lunchImgUrl}, now(), now() )
        </foreach>
    </insert>

    <insert id="saveLunchCategory">
        insert into lunch_category_tb
        values
        <foreach collection="lunchCategories" item="lunchCategory" separator=",">
            ( 0, #{lunchId}, #{lunchCategory}, now(), now() )
        </foreach>

    </insert>

    <select
        id="searchLunchList"
        resultMap="lunchResultMap"
    >
        select
            lt.lunch_id,
            lt.user_id,
            lt.lunch_title,
            lt.lunch_content,
            lt.lunch_place_name,
            lt.lunch_place_x,
            lt.lunch_place_y,
            lt.create_date,
            lt.update_date,
            ut.nickname,
            ut.profile_img_url,

            llt.lunch_like_user_id,
            liut.lunch_img_url,
            lctt.lunch_category_name
        from
            lunch_tb lt
            left outer join lunch_img_url_tb liut on ( liut.lunch_id = lt.lunch_id)
            left outer join lunch_like_tb llt on ( llt.lunch_id = lt.lunch_id )
            left outer join lunch_category_tb lctt on ( lctt.lunch_id = lt.lunch_id)
            left outer join user_tb ut on (ut.user_id = lt.user_id);
        <choose>
            <when test="ut.profile_img_url != null">
                ut.profile_img_url
            </when>
            <when test="llt.lunch_like_user_id != null">
                llt.lunch_like_user_id
            </when>
            <when test="lctt.lunch_category_name != null">
                lctt.lunch_category_name
            </when>
            <otherwise>
                NULL
            </otherwise>
        </choose>
    </select>

















</mapper>

